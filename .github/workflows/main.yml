name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Continuous Integration Job
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: firebase-ecommerce-app/fb-ecommerce-cicd-app/package-lock.json
    
    - name: Change to app directory
      run: cd firebase-ecommerce-app
    
    - name: Install dependencies
      run: |
        cd firebase-ecommerce-app
        npm ci
    
    - name: Run ESLint
      run: |
        cd firebase-ecommerce-app
        npm run lint
    
    - name: Run tests
      run: |
        cd firebase-ecommerce-app
        npm test -- --coverage --watchAll=false
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: firebase-ecommerce-app/coverage/lcov.info
        fail_ci_if_error: false
    
    - name: Build application
      run: |
        cd firebase-ecommerce-app
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: firebase-ecommerce-app/dist/

  # Continuous Deployment Job
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: firebase-ecommerce-app/package-lock.json
    
    - name: Install dependencies
      run: |
        cd firebase-ecommerce-app
        npm ci
    
    - name: Build for production
      run: |
        cd firebase-ecommerce-app
        npm run build
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: firebase-ecommerce-app
        vercel-args: '--prod'

  # Security scanning job
  security:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd firebase-ecommerce-app
        npm audit --audit-level=high